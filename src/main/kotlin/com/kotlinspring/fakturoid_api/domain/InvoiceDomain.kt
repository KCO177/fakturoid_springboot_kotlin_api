package com.kotlinspring.fakturoid_api.domain

import java.math.BigDecimal
import java.time.LocalDate
import java.time.LocalDateTime


class InvoiceDomain(
    val id: Int,
    val customId: String?,
    val documentType: String,
    val proformaFollowupDocument: String?,
    val taxDocumentIds: List<Int>?,
    val correctionId: Int?,
    val number: String?,
    val numberFormatId: Int?,
    val variableSymbol: String?,
    val yourName: String?,
    val yourStreet: String?,
    val yourCity: String?,
    val yourZip: String?,
    val yourCountry: String?,
    val yourRegistrationNo: String?,
    val yourVatNo: String?,
    val yourLocalVatNo: String?,
    val clientName: String?,
    val clientStreet: String?,
    val clientCity: String?,
    val clientZip: String?,
    val clientCountry: String?,
    val clientHasDeliveryAddress: Boolean = false,
    val clientDeliveryName: String?,
    val clientDeliveryStreet: String?,
    val clientDeliveryCity: String?,
    val clientDeliveryZip: String?,
    val clientDeliveryCountry: String?,
    val clientRegistrationNo: String?,
    val clientVatNo: String?,
    val clientLocalVatNo: String?,
    val subjectId: Int?,
    val subjectCustomId: String?,
    val generatorId: Int?,
    val relatedId: Int?,
    val paypal: Boolean = false,
    val gopay: Boolean = false,
    val token: String?,
    val status: String?,
    val orderNumber: String?,
    val issuedOn: LocalDate?,
    val taxableFulfillmentDue: String?,
    val due: Int?,
    val dueOn: LocalDate?,
    val sentAt: LocalDateTime?,
    val paidOn: LocalDate?,
    val reminderSentAt: LocalDateTime?,
    val cancelledAt: LocalDateTime?,
    val uncollectibleAt: LocalDateTime?,
    val lockedAt: LocalDateTime?,
    val webinvoiceSeenOn: LocalDate?,
    val note: String?,
    val footerNote: String?,
    val privateNote: String?,
    val tags: List<String>?,
    val bankAccountId: Int?,
    val bankAccount: String?,
    val iban: String?,
    val swiftBic: String?,
    val ibanVisibility: String = "automatically",
    val showAlreadyPaidNoteInPdf: Boolean = false,
    val paymentMethod: String?,
    val customPaymentMethod: String?,
    val hideBankAccount: Boolean?,
    val currency: String?,
    val exchangeRate: BigDecimal?,
    val language: String?,
    val transferredTaxLiability: Boolean = false,
    val supplyCode: String?,
    val oss: String = "disabled",
    val vatPriceMode: String?,
    val roundTotal: Boolean = false,
    val subtotal: BigDecimal?,
    val total: BigDecimal?,
    val nativeSubtotal: BigDecimal?,
    val nativeTotal: BigDecimal?,
    val remainingAmount: BigDecimal?,
    val remainingNativeAmount: BigDecimal?,
    val eetRecords: List<Any>?, // Define appropriate type if available
    val lines: List<Any>?, // Define appropriate type if available
    val vatRatesSummary: List<Any>?, // Define appropriate type if available
    val paidAdvances: List<Any>?, // Define appropriate type if available
    val payments: List<Any>?, // Define appropriate type if available
    val attachments: List<Any>?, // Define appropriate type if available
    val htmlUrl: String?,
    val publicHtmlUrl: String?,
    val url: String?,
    val pdfUrl: String?,
    val subjectUrl: String?,
    val createdAt: String?,
    val updatedAt: String?
)

